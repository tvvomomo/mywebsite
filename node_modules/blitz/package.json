{
  "author": {
    "name": "Guilherme Hermeto",
    "email": "guilherme.hermeto@spirent.com"
  },
  "name": "blitz",
  "description": "Blitz node.js client API",
  "version": "0.4.1",
  "homepage": "http://blitz.io",
  "repository": {
    "type": "git",
    "url": "git://github.com/blitz-io/blitz-node.git"
  },
  "main": "./lib/blitz.js",
  "scripts": {
    "test": "jasmine-node spec"
  },
  "engines": {
    "node": ">=v0.4.8"
  },
  "dependencies": {},
  "devDependencies": {
    "jasmine-node": "~1.0.6"
  },
  "readme": "### ![blitz.io](http://blitz.io/images/logo2.png)\n\n### Make load and performance a fun sport.\n\n* Run a sprint from around the world\n* Rush your API and website to scale it out\n* Condition your site around the clock\n\n## Getting started\n\nLogin to [blitz.io](http://blitz.io) and in the blitz bar type:\n    \n    --api-key\n\nNow\n\n    npm install blitz\n\nThen\n\n**Sprint**\n\n```javascript\nvar Blitz = require('blitz-node');\n\nconsole.log('Starting Sprint...');\nnew Blitz('<email>','<api-key>').sprint({\n    steps: [\n        {url: 'http://your.cool.app'},\n        {url: 'http://your.cool.ap/page1'}\n    ],\n\tregion: 'california'\n}).on('status', function (data) {\n    process.stdout.write('.');\n}).on('complete', function (data) {\n    var steps, i, step;\n    console.log('region: ' + data.region);\n    console.log('duration: ' + data.duration);\n    steps = data.steps;\n    for(i in steps) {\n        step = steps[i];\n        console.log(\"> Step \" + i);\n        console.log(\"\\tstatus: \" + step.response.status);\n        console.log(\"\\tduration: \" + step.duration);\n        console.log(\"\\tconnect: \" + step.connect);\n    }\n}).on('error', function (response) {\n    console.log(\"error: \" + response.error);\t\n    console.log(\"reason: \" + response.reason);\n});\n```\n\n**Rush**\n\n```javascript\nvar Blitz = require('blitz');\n\nconsole.log('Starting Rush...');\nnew Blitz('<email>','<api-key>').rush({\n    steps: [\n        {url: 'http://your.cool.app'},\n        {url: 'http://your.cool.app/page1'}\n    ],\n    region: 'california',\n    pattern: { intervals: [{start: 1, end: 10, duration: 30}]}\n}).on('status', function (data) {\n    process.stdout.write('.');\n}).on('complete', function (data) {\n    var steps, i, step;\n    console.log('region: ' + data.region);\n    console.log('duration: ' + data.duration);\n    steps = data.steps;\n    for(i in steps) {\n        step = steps[i];\n        console.log(\"> Step \" + i);\n        console.log(\"\\tstatus: \" + step.response.status);\n        console.log(\"\\tduration: \" + step.duration);\n        console.log(\"\\tconnect: \" + step.connect);\n    }\n}).on('error', function (response) {\n    console.log(\"error: \" + response.error);\t\n    console.log(\"reason: \" + response.reason);\n});\n```\n\n**or using the API parser**\n\nThe parser expects a text and will recognize the type of test at runtime.\n\n```javascript\nvar Blitz = require('blitz');\n\nconsole.log('Starting Test...');\nnew Blitz('<email>','<api-key>').execute('-p 1-100:60 http://your.cool.app').on('status', function (data) {\n    process.stdout.write('.');\n}).on('complete', function (data) {\n    var steps, i, step;\n    console.log('region: ' + data.region);\n    console.log('duration: ' + data.duration);\n    steps = data.steps;\n    for(i in steps) {\n        step = steps[i];\n        console.log(\"> Step \" + i);\n        console.log(\"\\tstatus: \" + step.response.status);\n        console.log(\"\\tduration: \" + step.duration);\n        console.log(\"\\tconnect: \" + step.connect);\n    }\n}).on('error', function (response) {\n    console.log(\"error: \" + response.error);    \n    console.log(\"reason: \" + response.reason);\n});\n```\n\n\n\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/blitz-io/blitz-node/issues"
  },
  "_id": "blitz@0.4.1",
  "dist": {
    "shasum": "fda337d111b1a9d39e4e5de44cb00c02e412c122"
  },
  "_from": "blitz@",
  "_resolved": "https://registry.npmjs.org/blitz/-/blitz-0.4.1.tgz"
}
